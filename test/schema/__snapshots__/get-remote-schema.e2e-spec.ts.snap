// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`getRemoteSchema > should return schema if fetch request is successful 1`] = `
{
  "authRule": "",
  "authToken": {
    "duration": 604800,
  },
  "createRule": "",
  "deleteRule": "id = @request.auth.id",
  "emailChangeToken": {
    "duration": 1800,
  },
  "fields": [
    {
      "autogeneratePattern": "[a-z0-9]{15}",
      "hidden": false,
      "max": 15,
      "min": 15,
      "name": "id",
      "pattern": "^[a-z0-9]+$",
      "presentable": false,
      "primaryKey": true,
      "required": true,
      "system": true,
      "type": "text",
    },
    {
      "cost": 0,
      "hidden": true,
      "max": 0,
      "min": 8,
      "name": "password",
      "pattern": "",
      "presentable": false,
      "required": true,
      "system": true,
      "type": "password",
    },
    {
      "autogeneratePattern": "[a-zA-Z0-9]{50}",
      "hidden": true,
      "max": 60,
      "min": 30,
      "name": "tokenKey",
      "pattern": "",
      "presentable": false,
      "primaryKey": false,
      "required": true,
      "system": true,
      "type": "text",
    },
    {
      "exceptDomains": null,
      "hidden": false,
      "name": "email",
      "onlyDomains": null,
      "presentable": false,
      "required": true,
      "system": true,
      "type": "email",
    },
    {
      "hidden": false,
      "name": "emailVisibility",
      "presentable": false,
      "required": false,
      "system": true,
      "type": "bool",
    },
    {
      "hidden": false,
      "name": "verified",
      "presentable": false,
      "required": false,
      "system": true,
      "type": "bool",
    },
    {
      "autogeneratePattern": "",
      "hidden": false,
      "max": 255,
      "min": 0,
      "name": "name",
      "pattern": "",
      "presentable": false,
      "primaryKey": false,
      "required": false,
      "system": false,
      "type": "text",
    },
    {
      "hidden": false,
      "maxSelect": 1,
      "maxSize": 0,
      "mimeTypes": [
        "image/jpeg",
        "image/png",
        "image/svg+xml",
        "image/gif",
        "image/webp",
      ],
      "name": "avatar",
      "presentable": false,
      "protected": false,
      "required": false,
      "system": false,
      "thumbs": null,
      "type": "file",
    },
    {
      "hidden": false,
      "name": "created",
      "onCreate": true,
      "onUpdate": false,
      "presentable": false,
      "system": false,
      "type": "autodate",
    },
    {
      "hidden": false,
      "name": "updated",
      "onCreate": true,
      "onUpdate": true,
      "presentable": false,
      "system": false,
      "type": "autodate",
    },
  ],
  "fileToken": {
    "duration": 180,
  },
  "id": "_pb_users_auth_",
  "indexes": [
    "CREATE UNIQUE INDEX \`idx_tokenKey__pb_users_auth_\` ON \`users\` (\`tokenKey\`)",
    "CREATE UNIQUE INDEX \`idx_email__pb_users_auth_\` ON \`users\` (\`email\`) WHERE \`email\` != ''",
  ],
  "listRule": "id = @request.auth.id",
  "manageRule": null,
  "mfa": {
    "duration": 1800,
    "enabled": false,
    "rule": "",
  },
  "name": "users",
  "oauth2": {
    "enabled": false,
    "mappedFields": {
      "avatarURL": "avatar",
      "id": "",
      "name": "name",
      "username": "",
    },
    "providers": [],
  },
  "passwordAuth": {
    "enabled": true,
    "identityFields": [
      "email",
    ],
  },
  "passwordResetToken": {
    "duration": 1800,
  },
  "system": false,
  "type": "auth",
  "updateRule": "id = @request.auth.id",
  "verificationToken": {
    "duration": 259200,
  },
  "viewRule": "id = @request.auth.id",
}
`;
